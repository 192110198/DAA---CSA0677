# include<stdio.h>
int count=0;
void knapsack(int n, float weight[], float profit[], float capacity)
 {
   float x[20], tp = 0;
   int i, j, u;
   u = capacity;
 
   for (i = 0; i < n; i++)
   {
   	  count++;
   	  count++;
      x[i] = 0.0;
  }
  count++;
 
   for (i = 0; i < n; i++)
    {
    	count++;
    	count++;
      if (weight[i] > u)
      {
         break;
     }
      else
	   {
	   	 count++;
         x[i] = 1.0;
         count++;
         tp = tp + profit[i];
         count++;
         u = u - weight[i];
      }
      count++;
   }
   count++;
 
   if (i < n)
   {
   	  count++;
      x[i] = u / weight[i];
  }
  count++;
  count++;
   tp = tp + (x[i] * profit[i]);
 count++;
   printf("\nThe result vector is:- ");
   for (i = 0; i < n; i++)
   { 
      count++;
      count++;
   	  count++;
      printf("%f\t", x[i]);
      count++;
   printf("\nMaximum profit is:- %f", tp);
}
}
 
int main() 
{
   float weight[20], profit[20], capacity;
   int num, i, j;
   float ratio[20], temp;
   int count=0;
   count++;
   printf("\nEnter the no. of objects:- ");
   count++;
   scanf("%d", &num);
   count++;
   printf("\nEnter the wts and profits of each object:- ");
   for (i = 0; i < num; i++)
    {
    	count++;
    	count++;
    	count++;
      scanf("%f %f", &weight[i], &profit[i]);
   }
   count++;
   count++;
   printf("\nEnter the capacityacity of knapsack:- ");
   count++;
   scanf("%f", &capacity);
 
   for (i = 0; i < num; i++)
    {
    	count++;
    	count++;
    	count++;
      ratio[i] = profit[i] / weight[i];
   } 
   count++;
   for (i = 0; i < num; i++)
    {
    	count++;
    	count++;
      for (j = i + 1; j < num; j++)
	   {
	   	  count++;
	   	  count++;
         if (ratio[i] < ratio[j]) 
		 {
		 	count++;
            temp = ratio[j];
            count++;
            ratio[j] = ratio[i];
            count++;
            ratio[i] = temp;
            count++;
            temp = weight[j];
            count++;
            weight[j] = weight[i];
            count++;
            weight[i] = temp;
            count++;
            temp = profit[j];
            count++;
            profit[j] = profit[i];
            count++;
            profit[i] = temp;
         }
         count++;
      }
      count++;
   }
   count++;
 
   knapsack(num, weight, profit, capacity);
   printf("time complexity is %d:",count);
   return 0;
}
